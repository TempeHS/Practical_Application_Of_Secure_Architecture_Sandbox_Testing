services:
  # Dedicated sandbox environment for cybersecurity tools
  sandbox:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: cybersec_sandbox
    hostname: sandbox
    networks:
      - sandbox_network
    volumes:
      # Mount workspace for development
      - /workspaces/Secure_Architecture_Sandbox_Testing_Environment:/workspace:cached
      # Persistent volumes for data
      - sandbox_reports:/workspace/reports
      - sandbox_logs:/workspace/logs
    ports:
      - "8080:8080" # Analysis web interface
      - "8000:8000" # Development server
    environment:
      - PYTHONPATH=/workspace/src
      - SANDBOX_MODE=educational
    # Security settings appropriate for educational use
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_RAW # For nmap and network tools
      - NET_ADMIN # For network analysis
    # Resource limits for Codespaces
    mem_limit: 1g
    cpus: 0.8
    restart: unless-stopped
    # Keep container running and allow interactive access
    stdin_open: true
    tty: true
    # Services will start automatically via the startup script
    # To access bash interactively: docker exec -it cybersec_sandbox /bin/bash

  # PWA Flask application - completely independent
  unsecure-pwa:
    build:
      context: ..
      dockerfile: docker/Dockerfile.unsecure-pwa
    container_name: unsecure_pwa
    hostname: unsecure-pwa
    networks:
      - sandbox_network
    ports:
      - "5000:5000" # Map host 5000 to PWA Flask app port
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    restart: unless-stopped
    # NO depends_on - runs independently

  # Vulnerable Flask app - separate service
  vulnerable-flask:
    build:
      context: ..
      dockerfile: docker/Dockerfile.vulnerable-flask
    container_name: vulnerable_flask
    hostname: vulnerable-flask
    networks:
      - sandbox_network
    ports:
      - "9090:9090" # Map host 9090 to vulnerable Flask app port
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    restart: unless-stopped
    # NO depends_on - runs independently

networks:
  sandbox_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    # Enable isolation for educational security testing
    internal: false

volumes:
  sandbox_reports:
    driver: local
  sandbox_logs:
    driver: local
